version: '3.7'
services:
  nginx:
    container_name: core_web
    restart: on-failure
    image: nginx:stable
    environment:
      - EC2_HOST_DNS=$${{ secrets.EC2_HOST_DNS }}
    volumes:
      - ./nginx/user_conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
    ports:
      - "80:80"
    depends_on:
      - web

  web:
    container_name: core_app
    build: .
    restart: always
    ports:
      - "5000:5000"
    command: >
      sh -c " python manage.py migrate &&
          gunicorn CoreRoot.wsgi:application --bind 0.0.0.0:5000"
    volumes:
     - .:/app
     - static_volume:/app/static
    depends_on:
     - db
  db:
    container_name: core_db
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - EC2_HOST_DNS=$${{ secrets.EC2_HOST_DNS }}
      - SECRET_KEY=django-insecure-97s)x3c8w8h_qv3t3s7%)#k@dpk2edr0ed_(rq9y(rbb&_!ai%
      - DEBUG=1
      - DB_ENGINE=django.db.backends.postgresql_psycopg2
      - DB_NAME=coredb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_DB=coredb
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=en_US.UTF-8
    command: >
      sh -c "docker-entrypoint.sh postgres &&
             psql -U postgres -c 'CREATE DATABASE coredb;' &&
             psql -U postgres -d coredb -c 'CREATE USER core WITH PASSWORD '\''12345678'\'';' &&
             psql -U postgres -d coredb -c 'ALTER USER core CREATEDB;' &&
             psql -U postgres -d coredb -c 'GRANT ALL PRIVILEGES ON DATABASE coredb TO core;'"

volumes:
  static_volume:
  postgres_data: